### mysql连接信息
spring.datasource.url=jdbc:mysql://101.132.74.175:3306/test
### 用户名
spring.datasource.username=root
### 密码
spring.datasource.password=Mysqllxw123!
### 驱动
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Druid配置
# 数据源类别
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=5
# 配置获取连接等待超时的时间，单位是毫秒
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#配置监控拦截统计的filters，去掉后监控界面的SQL无法统计，'wall'用于防护墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能，慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDatasource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
# Redis缓存配置
# 默认redis数据库为db0
spring.redis.database=0
# 服务器地址
spring.redis.host=101.132.74.175
# 连接端口
spring.redis.port=6379
# redis密码
spring.redis.password=Redislxw123!
### log4j配置
#logging.config=classpath:log4j2.xml
### Mail邮件配置
### 邮箱主机
spring.mail.host=smtp.qq.com
### 用户名
spring.mail.username=lxwpeter@qq.com
spring.mail.password=gfecxpfbwukqcbcj
### 默认编码
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
# mybatis配置
# Mapper资源文件存放的路径
mybatis.mapper-locations=classpath:/mappers/*Mapper.xml
# Dao接口文件存放的目录
mybatis.type-aliases-package=tech.punklu.springboot.demo.dao
# activeMq
spring.activemq.broker-url=tcp://101.132.74.175:61616
spring.activemq.in-memory=true
spring.activemq.pool.enabled=false
#spring.activemq.packages.trust-all:ObjectMessage的使用机制是不安全的，ActiveMQ自5.12.2和5.13.0之后，强制Consumer端声明一份可信任的包列表，只有当ObjectMessage中的Object
# 在可信任包内，才能被提取出来。该配置表示信任所有的包
spring.activemq.packages.trust-all=true